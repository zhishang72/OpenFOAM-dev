#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     | Website:  https://openfoam.org
#   \\  /    A nd           | Copyright (C) 2011-2024 OpenFOAM Foundation
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     foamListThirdPartyBinDirs <directory> [archOptions]
#
# Description
#     Lists directories containing binary files for OpenFOAM ThirdParty
#
# Note
#     Not normally called directly by the user.
#------------------------------------------------------------------------------
[ $# -eq 1 -o $# -eq 2 ] || {
cat <<USAGE 1>&2
Usage : ${0##*/} <packDir> [archOptions]

* List directories containing binary files for OpenFOAM ThirdParty

    The value of 'archOptions' normally corresponds to \$WM_OPTIONS
    The current value of \$WM_OPTIONS = $WM_OPTIONS

USAGE
    exit 1
}

#------------------------------------------------------------------------------
packDir="$1"

# default to same as $WM_OPTIONS - eg, 'linux64GccDPOpt'
archOptions="${2:-$WM_OPTIONS}"

[ -n "$archOptions" ] || {
    echo "Error: no archOptions specified" 1>&2
    exit 1
}

# same as "$WM_ARCH$WM_COMPILER$WM_PRECISION_OPTION$WM_LABEL_OPTION"
archOSCompilerTypes=$(echo "$archOptions" | sed -e 's@\(Int[0-9]\+\).*$@\1@')

# same as "$WM_ARCH$WM_COMPILER"
archOSCompiler=$(echo "$archOptions" | sed -e 's@[DSL]P.*$@@')

# same as $WM_ARCH - eg, 'linux64'
# TODO: only works for Gcc, Icc, Clang
archOS=$(echo "$archOptions" | sed -e 's@[GI]cc.*$@@' -e 's@Clang.*$@@')

# links for 32-bit version, eg convert linux64 -> linux-64
arch3264=$(echo "$archOS" | sed -e 's@64@-64@')


#------------------------------------------------------------------------------
# check for essential directories
for dir in \
    $packDir \
    ;
do
    [ -d $dir ] || {
        echo "Error: directory $dir does not exist" 1>&2
        exit 1
    }
done

#------------------------------------------------------------------------------
# list of directories
dirList=$(
    for dir in \
        $packDir/platforms/$archOptions \
        $packDir/platforms/$archOSCompilerTypes \
        $packDir/platforms/$archOSCompiler \
        $packDir/platforms/$archOS \
        ;
    do
        [ -d $dir ] && echo $dir
    done

    # add in links for 32-bit version
    if [ "$archOS" != "$arch3264" ]
    then
        for dir in \
            $packDir/platforms/$arch3264 \
            ;
        do
            [ -d $dir -a -L $dir ] && echo $dir
        done
     fi
)


cat <<INFO 1>&2
-------------------------------------------------------------------------------
Packing $archOptions port of $packDir
    archOS       = $archOS
    32bit archOS = $arch3264

dirs:
    $(echo ${dirList:-NONE})

INFO

echo "$dirList"

#------------------------------------------------------------------------------
